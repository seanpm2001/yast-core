Parsed:
----------------------------------------------------------------------
mergestring ([], ".")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
mergestring (["abc", "dev", "ghi"], "")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
mergestring (["abc", "dev", "ghi"], "123")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"** deletechars **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
deletechars ("1a2b3c", "abc")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
deletechars ("1a2b3c", "")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
deletechars ("", "abc")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
deletechars ("", "")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"** filterchars **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
filterchars ("1a2b3c", "abc")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
filterchars ("1a2b3c", "")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
filterchars ("", "abc")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
filterchars ("", "")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"** crypt  -  disabled **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"** tolower **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
tolower ("aBcDeF")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"** find et.al. **"
----------------------------------------------------------------------
[Parser] tests/builtin/Builtin-String1.ycp:43 Warning: find(...) is deprecated, please fix
Parsed:
----------------------------------------------------------------------
find ("abcdefghi", "efg")
----------------------------------------------------------------------
[Parser] tests/builtin/Builtin-String1.ycp:44 Warning: find(...) is deprecated, please fix
Parsed:
----------------------------------------------------------------------
find ("aaaaa", "z")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
search ("abcdefghi", "efg")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
search ("aaaaa", "z")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
findfirstnotof ("abcdefghi", "abcefghi")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
findfirstnotof ("aaaaa", "a")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
findfirstof ("abcdefghi", "cxdv")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
findfirstof ("aaaaa", "z")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
findlastof ("abcdecfghi", "cxdv")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
findlastof ("aaaaa", "z")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"** regex **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(regexpmatch ("aaabbb", "ab") == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(regexpmatch ("aaabbb", "ba") == false)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(regexpmatch ("aaabbb", ".*ab.*") == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(regexpmatch ("aaabbb", ".*ba.*") == false)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(regexpsub ("aaabbb", "(.*ab).*", "s_\\1_e") == "s_aaab_e")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(regexpsub ("aaabbb", "(.*abb)(.*)", "s_\\1_e\\2") == "s_aaabb_eb")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(regexpsub ("aaabbb", "(a*b)(.*)", "\\1") == "aaab")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(regexpsub ("aaabbb", "(a*b)(.*)", "\\1\\1") == "aaabaaab")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(regexpsub ("aaabbb", "(a*b)(.*)", "\\") == "\\")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(regexpsub ("aaabbb", "(a*b)(.*)", "\\\\") == "\\\\")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(regexpsub ("aaabbb", "(a*b)(.*)", "A\\NZ") == "A\\NZ")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(regexpsub ("aaabbb", "(a*b)(.*)", "A\\\\1Z") == "A\\aaabZ")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(regexpsub ("machine=i386\\2ci486\\2ci586\\2ci686", "^([^=]*)=(.*)", "\\2") == "i386\\2ci486\\2ci586\\2ci686")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(regexptokenize ("aaabbBb", "(.*[[:upper:]]).*") == ["aaabbB"])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(regexptokenize ("aaabbb", "(.*ab)(.*)") == ["aaab", "bb"])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(regexptokenize ("aaabbb", "(.*ba).*") == [])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(regexptokenize ("aaabbb", "(.*ba).*()") == [])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"** sformat **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
sformat ("%2 is greater %% than %1", 3, "five")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"** conversions **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
tostring (tofloat (63), 4)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
tostring (0.12345, 4)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
tohexstring (31)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
tohexstring (31, 4)
----------------------------------------------------------------------
